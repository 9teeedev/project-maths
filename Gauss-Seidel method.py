import numpy as np

def gauss_seidel(A, b, tol=1e-6, max_iter=100):
    A = A.astype(float)
    b = b.astype(float)
    n = len(b)
    x = np.zeros(n)

    # === ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏ô‡πÅ‡∏ô‡∏ß‡∏ó‡πÅ‡∏¢‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏ñ‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ===
    for i in range(n):
        if A[i, i] == 0:
            for k in range(i+1, n):
                if A[k, i] != 0:
                    A[[i, k]] = A[[k, i]]
                    b[[i, k]] = b[[k, i]]
                    break
            else:
                raise ZeroDivisionError(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥ Pivot ‡∏ó‡∏µ‡πà‡πÅ‡∏ñ‡∏ß {i+1} ‡πÑ‡∏î‡πâ (A[{i},{i}] = 0)")

    print("\n=== ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏Å‡∏≤‡∏™‡πå-‡πÑ‡∏ã‡πÄ‡∏î‡∏• ===\n")

    for k in range(1, max_iter+1):
        x_old = x.copy()
        for i in range(n):
            sum_ = np.dot(A[i, :i], x[:i]) + np.dot(A[i, i+1:], x[i+1:])
            x[i] = (b[i] - sum_) / A[i, i]

        if np.max(np.abs(x - x_old)) < tol:
            print(f"\n‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏•‡∏±‡∏á {k} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡∏ñ‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡∏≤‡∏î‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î)\n")
            break

        print(f"‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà {k}: x = {x}")

    print("\n‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ñ‡∏∑‡∏≠:")
    for i in range(n):
        print(f"x[{i+1}] = {x[i]:.4f}")

    return x


# ===========================
# üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
# ===========================
print("=== ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏Å‡∏≤‡∏™‡πå-‡πÑ‡∏ã‡πÄ‡∏î‡∏• ===\n")

n = int(input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏°‡∏ó‡∏£‡∏¥‡∏Å‡∏ã‡πå (n x n): "))

print("\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ó‡∏£‡∏¥‡∏Å‡∏ã‡πå A (‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á):")
A = np.zeros((n, n))
for i in range(n):
    A[i] = list(map(float, input(f"‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {i+1}: ").split()))

print("\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå b (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á):")
b = np.array(list(map(float, input().split())))

tol = float(input("\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡∏≤‡∏î‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô (Œµ): "))

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
gauss_seidel(A, b, tol=tol)
